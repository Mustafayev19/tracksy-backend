import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common'; // ValidationPipe import edildi
import * as express from 'express'; // Express import edildi

async function bootstrap() {
  const app = await NestFactory.create(AppModule, {
    bodyParser: false, // Avtomatik body parsingi deaktiv edirik
    logger: ['error', 'warn', 'log'], // ∆ètraflƒ± loglama
  });

  // D√úZ∆èLƒ∞≈û: app.enableCors() konfiqurasiyasƒ±
  const allowedOrigins =
    process.env.NODE_ENV === 'production'
      ? [
          'https://mustafayev-tracksy.netlify.app', // Frontend'in Netlify adresi
          'https://tracksy-backend.onrender.com', // Backend'in Render adresi (b…ôz…ôn backend √∂z√º d…ô √∂z domenini origin…ô …ôlav…ô etm…ôlidir)
        ]
      : ['http://localhost:4200']; // Frontend'in lokal adresi

  app.enableCors({
    origin: allowedOrigins,
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE', // B√ºt√ºn HTTP metodlarƒ±na icaz…ô ver
    credentials: true, // `Authorization` header'i v…ô ya cookie kimi credentials g√∂nd…ôrm…ôy…ô icaz…ô ver
  });

  // ∆èl il…ô JSON body parser middleware-ni …ôlav…ô edirik
  app.use(express.json({ limit: '50mb' }));
  app.use(express.urlencoded({ extended: true, limit: '50mb' }));

  // Qlobal ValidationPipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: false,
      transform: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // D√úZ∆èLƒ∞≈û: Render'd…ô d√ºzg√ºn dinl…ôm…ô √º√ß√ºn
  const port = process.env.PORT || 3000;
  await app.listen(port, '0.0.0.0'); // D√úZ∆èLƒ∞≈û: '0.0.0.0' host …ôlav…ô edildi
  console.log(`üöÄ Application is running on: http://localhost:${port}`); // Bu log Render'd…ô d…ôyi≈üm…ôy…ôc…ôk
}
bootstrap();
